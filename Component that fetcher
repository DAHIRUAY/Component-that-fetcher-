Fetches data from an API (e.g., placeholder API like https://jsonplaceholder.typicode.com/posts)


2. Displays a list of items


3. Uses a reusable List component


4. Follows best practices with clean separation of concerns




---

✅ Final Structure:

src/
├── App.jsx
├── components/
│   └── List.jsx
└── index.js


---

🔧 Step-by-step Implementation

1. ✅ App.jsx — Fetching and passing data to the reusable List component

import { useEffect, useState } from 'react';
import List from './components/List';

function App() {
  const [posts, setPosts] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    // Fetch data from API
    fetch('https://jsonplaceholder.typicode.com/posts')
      .then(response => response.json())
      .then(data => {
        setPosts(data.slice(0, 10)); // Limit to first 10 posts
        setLoading(false);
      })
      .catch(error => {
        console.error('Error fetching data:', error);
        setLoading(false);
      });
  }, []);

  return (
    <div style={styles.container}>
      <h1>Posts List</h1>
      {loading ? <p>Loading...</p> : <List items={posts} renderItem={item => (
        <div style={styles.card} key={item.id}>
          <h3>{item.title}</h3>
          <p>{item.body}</p>
        </div>
      )} />}
    </div>
  );
}

const styles = {
  container: {
    padding: '40px',
    fontFamily: 'Arial, sans-serif',
  },
  card: {
    background: '#f0f0f0',
    padding: '16px',
    borderRadius: '8px',
    marginBottom: '12px',
  }
};

export default App;


---

2. ✅ components/List.jsx — Reusable List Component

import React from 'react';

function List({ items, renderItem }) {
  if (!items || items.length === 0) {
    return <p>No items to display.</p>;
  }

  return (
    <div>
      {items.map(item => renderItem(item))}
    </div>
  );
}

export default List;


---

3. 📦 index.js — App Entry Point

If you don't already have this set up:

import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


---

✅ Output:

A page displaying 10 fetched posts

Each post is styled inside a card

List is a generic reusable component used with renderItem (best practice)



---

🔁 Reusability Tip:

You can reuse the List component to display users, comments, products, etc., just by passing different items and renderItem functions.

